---
subcategory: "VPC IPAM (IP Address Manager)"
layout: "aws"
page_title: "AWS: aws_vpc_ipam_scope"
description: |-
  Creates a scope for AWS IPAM.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_ipam_scope

Creates a scope for AWS IPAM.

## Example Usage

Basic usage:

```python
# Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_region import DataAwsRegion
from imports.aws.vpc_ipam import VpcIpam
from imports.aws.vpc_ipam_scope import VpcIpamScope
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        current = DataAwsRegion(self, "current")
        example = VpcIpam(self, "example",
            operating_regions=[VpcIpamOperatingRegions(
                region_name=Token.as_string(current.name)
            )
            ]
        )
        aws_vpc_ipam_scope_example = VpcIpamScope(self, "example_2",
            description="Another Scope",
            ipam_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpc_ipam_scope_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `ipam_id` - The ID of the IPAM for which you're creating this scope.
* `description` - (Optional) A description for the scope you're creating.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) of the scope.
* `id` - The ID of the IPAM Scope.
* `ipam_arn` - The ARN of the IPAM for which you're creating this scope.
* `is_default` - Defines if the scope is the default scope or not.
* `pool_count` - The number of pools in the scope.
* `type` - The type of the scope.

## Import

Import IPAMs using the `scope_id`. For example:

```
$ terraform import aws_vpc_ipam_scope.example ipam-scope-0513c69f283d11dfb
```

<!-- cache-key: cdktf-0.17.1 input-6c11e2d092febbb66e5098eb95c05daa139772419fa06b65fefa76c982abc2ca -->