---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_ec2_subnet_cidr_reservation"
description: |-
  Provides a subnet CIDR reservation resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_subnet_cidr_reservation

Provides a subnet CIDR reservation resource.

## Example Usage

```python
# Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ec2_subnet_cidr_reservation import Ec2SubnetCidrReservation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Ec2SubnetCidrReservation(self, "example",
            cidr_block="10.0.0.16/28",
            reservation_type="prefix",
            subnet_id=Token.as_string(aws_subnet_example.id)
        )
```

## Argument Reference

This resource supports the following arguments:

* `cidr_block` - (Required) The CIDR block for the reservation.
* `reservation_type` - (Required) The type of reservation to create. Valid values: `explicit`, `prefix`
* `subnet_id` - (Required) The ID of the subnet to create the reservation for.
* `description` - (Optional) A brief description of the reservation.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the CIDR reservation.
* `owner_id` - ID of the AWS account that owns this CIDR reservation.

## Import

Import Existing CIDR reservations using `SUBNET_ID:RESERVATION_ID`. For example:

```
$ terraform import aws_ec2_subnet_cidr_reservation.example subnet-01llsxvsxabqiymcz:scr-4mnvz6wb7otksjcs9
```

<!-- cache-key: cdktf-0.17.1 input-de24521dc4a4a469e9f85c57a1b317acc28780364fe23698c4ff03c77f1b9114 -->