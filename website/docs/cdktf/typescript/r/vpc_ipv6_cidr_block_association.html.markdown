---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_ipv6_cidr_block_association"
description: |-
  Associate additional IPv6 CIDR blocks with a VPC
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_ipv6_cidr_block_association

Provides a resource to associate additional IPv6 CIDR blocks with a VPC.

The `awsVpcIpv6CidrBlockAssociation` resource allows IPv6 CIDR blocks to be added to the VPC.

## Example Usage

```typescript
// Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Vpc } from "./.gen/providers/aws/vpc";
import { VpcIpv6CidrBlockAssociation } from "./.gen/providers/aws/vpc-ipv6-cidr-block-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new Vpc(this, "test", {
      cidrBlock: "10.0.0.0/16",
    });
    const awsVpcIpv6CidrBlockAssociationTest = new VpcIpv6CidrBlockAssociation(
      this,
      "test_1",
      {
        ipv6IpamPoolId: Token.asString(awsVpcIpamPoolTest.id),
        vpcId: test.id,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpcIpv6CidrBlockAssociationTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `ipv6CidrBlock` - (Optional) The IPv6 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv6NetmaskLength`. This parameter is required if `ipv6NetmaskLength` is not set and he IPAM pool does not have `allocationDefaultNetmask` set.
* `ipv6IpamPoolId` - (Required) The ID of an IPv6 IPAM pool you want to use for allocating this VPC's CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts.
* `ipv6NetmaskLength` - (Optional) The netmask length of the IPv6 CIDR you want to allocate to this VPC. Requires specifying a `ipv6IpamPoolId`. This parameter is optional if the IPAM pool has `allocationDefaultNetmask` set, otherwise it or `cidrBlock` are required
* `vpcId` - (Required) The ID of the VPC to make the association with.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10M`)
- `delete` - (Default `10M`)

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the VPC CIDR association

## Import

Import `awsVpcIpv6CidrBlockAssociation` using the VPC CIDR Association ID. For example:

```
$ terraform import aws_vpc_ipv6_cidr_block_association.example vpc-cidr-assoc-xxxxxxxx
```

<!-- cache-key: cdktf-0.17.1 input-3ee4e8ed17a3c750eb15ab07c19264f4c8c5aa75f2b86cf807639df8819f069d -->