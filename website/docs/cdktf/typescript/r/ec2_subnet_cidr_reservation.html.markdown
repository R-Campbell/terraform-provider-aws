---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_ec2_subnet_cidr_reservation"
description: |-
  Provides a subnet CIDR reservation resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_subnet_cidr_reservation

Provides a subnet CIDR reservation resource.

## Example Usage

```typescript
// Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2SubnetCidrReservation } from "./.gen/providers/aws/ec2-subnet-cidr-reservation";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Ec2SubnetCidrReservation(this, "example", {
      cidrBlock: "10.0.0.16/28",
      reservationType: "prefix",
      subnetId: Token.asString(awsSubnetExample.id),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `cidrBlock` - (Required) The CIDR block for the reservation.
* `reservationType` - (Required) The type of reservation to create. Valid values: `explicit`, `prefix`
* `subnetId` - (Required) The ID of the subnet to create the reservation for.
* `description` - (Optional) A brief description of the reservation.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the CIDR reservation.
* `ownerId` - ID of the AWS account that owns this CIDR reservation.

## Import

Import Existing CIDR reservations using `subnetId:reservationId`. For example:

```
$ terraform import aws_ec2_subnet_cidr_reservation.example subnet-01llsxvsxabqiymcz:scr-4mnvz6wb7otksjcs9
```

<!-- cache-key: cdktf-0.17.1 input-de24521dc4a4a469e9f85c57a1b317acc28780364fe23698c4ff03c77f1b9114 -->